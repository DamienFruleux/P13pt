## high priority
* put the "replace dialog" in a different place
* use only the filename as a key, not the entire path
* loading the fitting parameters
  -> need to verify that model params are compatible
  -> need to verify that dataset is compatible
  -> need to update plotting area after loading

* add button to readjust x+y axis and to reset zoom home
* let the user also decide a frequency range in which he wants to fit
* allow non-integer values for fitting params
* need to be able to modify range of sliders
* put a function to export deembedded admittance spectra
* add button to plot raw DUT, dummy, Thru S params
* add button to unload the model / remove the model curves
* enable user to choose which Y parameter


## low priority
* make a program that can plot spectra from fitresults (by clicking on datapoints)
* remove redundancy self.dut.f vs. self.f
* error when loading model before spectra
* legend real and imag
* we should impose the order of the parameters
* the default fit method could be created automatically / be in a base class
* make a history of fitting values every time they change so that the user can restore what was before fit
* add fit result "grade"
* save results file in windows compatible format (CRLF)
* check dataset coherence (i.e. all spectra have same number of frequency points and values can be read etc.)
* indicate if de-embedding went well (e.g. green indicator behind data browser field)
* when using "fit all", should disable interface but add stop button
* should not use self.parent() in Fitter widget
* the save results section should rather be controlled by the main widget since it manages all the model results too
* no need for signal mapper for sliders, can just update all model values using slider dictionary
* reset_values should not be in the model class